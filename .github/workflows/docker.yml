name: Docker

on:
  push:
    tags:
      - 'v*'

# Do not run this workflow in parallel for any PR change
# to prevent concurrent pushes for the same Docker image tag.
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}

jobs:
  docker:
    runs-on: ubuntu-22.04
    if: github.event_name != 'pull_request_target'
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set Ghidra version and date
        id: ghidra-meta
        run: |
          echo "GHIDRA_DATE=${GITHUB_REF_NAME#v*-*}" >> $GITHUB_OUTPUT
          TMP=${GITHUB_REF_NAME%*-*} && echo "GHIDRA_VERSION=${TMP#v}" >> $GITHUB_OUTPUT
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            fortenbt/ghidra-ext-build
            ghcr.io/fortenbt/ghidra-ext-build
          # generate Docker tags based on the following events/attributes
          flavor: |
            latest=false
          tags: |
            type=match,pattern=v(.*)-(.*),group=1
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          build-args: |
            GRADLE_VERSION=7.6
            GHIDRA_VERSION=${{ steps.ghidra-meta.outputs.GHIDRA_VERSION }}
            GHIDRA_DATE=${{ steps.ghidra-meta.outputs.GHIDRA_DATE }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
